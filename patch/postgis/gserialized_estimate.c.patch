diff --git a/postgis/gserialized_estimate.c b/postgis/gserialized_estimate.c
index 9bfb7e5ec..16bcfb0a0 100644
--- a/postgis/gserialized_estimate.c
+++ b/postgis/gserialized_estimate.c
@@ -19,6 +19,7 @@
  **********************************************************************
  *
  * Copyright 2012 (C) Paul Ramsey <pramsey@cleverelephant.ca>
+ * Modifications Copyright (c) 2017 - Present Pivotal Software, Inc. All Rights Reserved.
  *
  **********************************************************************/
 
@@ -902,28 +903,6 @@ pg_nd_stats_from_tuple(HeapTuple stats_tuple, int mode)
 
     /* Then read the geom status histogram from that */
 
-#if POSTGIS_PGSQL_VERSION < 100
-	{
-		float4 *floatptr;
-		int nvalues;
-
-		rv = get_attstatsslot(stats_tuple, 0, 0, stats_kind, InvalidOid,
-							NULL, NULL, NULL, &floatptr, &nvalues);
-
-		if ( ! rv ) {
-			POSTGIS_DEBUGF(2, "no slot of kind %d in stats tuple", stats_kind);
-			return NULL;
-		}
-
-		/* Clone the stats here so we can release the attstatsslot immediately */
-		nd_stats = palloc(sizeof(float) * nvalues);
-		memcpy(nd_stats, floatptr, sizeof(float) * nvalues);
-
-		/* Clean up */
-		free_attstatsslot(0, NULL, 0, floatptr, nvalues);
-	}
-#else /* PostgreSQL 10 or higher */
-	{
 		AttStatsSlot sslot;
 		rv = get_attstatsslot(&sslot, stats_tuple, stats_kind, InvalidOid,
 							 ATTSTATSSLOT_NUMBERS);
@@ -937,8 +916,6 @@ pg_nd_stats_from_tuple(HeapTuple stats_tuple, int mode)
 		memcpy(nd_stats, sslot.numbers, sizeof(float4) * sslot.nnumbers);
 
 		free_attstatsslot(&sslot);
-	}
-#endif
 
 	return nd_stats;
 }
@@ -2582,10 +2559,14 @@ Datum _postgis_gserialized_index_extent(PG_FUNCTION_ARGS)
 	if (!idx_oid)
 		PG_RETURN_NULL();
 
+	elog(WARNING, "idx_oid: %u", idx_oid);
 	gbox = spatial_index_read_extent(idx_oid, key_type);
-	if (!gbox)
+	if (!gbox){
 		PG_RETURN_NULL();
-	else
+	}
+	else{
+		elog(WARNING, "got pointer");
 		PG_RETURN_POINTER(gbox);
+	}
 }
 
