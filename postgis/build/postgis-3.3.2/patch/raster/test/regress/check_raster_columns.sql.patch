diff --git a/raster/test/regress/check_raster_columns.sql b/raster/test/regress/check_raster_columns.sql
index 9fbee8973..9191a8d97 100644
--- a/raster/test/regress/check_raster_columns.sql
+++ b/raster/test/regress/check_raster_columns.sql
@@ -3,6 +3,7 @@
 -- Copyright (c) 2010 Mateusz Loskot <mateusz@loskot.net>
 -- Copyright (C) 2011 - 2013 Regents of the University of California
 --   <bkpark@ucdavis.edu>
+-- Modifications Copyright (c) 2017 - Present Pivotal Software, Inc. All Rights Reserved.
 --
 -- This program is free software; you can redistribute it and/or
 -- modify it under the terms of the GNU General Public License
@@ -40,7 +41,7 @@ DROP TABLE IF EXISTS test_raster_columns;
 CREATE TABLE test_raster_columns (
 	rid integer,
 	rast raster
-);
+) DISTRIBUTED BY (rid);
 CREATE OR REPLACE FUNCTION make_test_raster(
 	rid integer,
 	width integer DEFAULT 2,
@@ -104,7 +105,15 @@ SELECT make_test_raster(4, 3, 3, 3, 3);
 
 SELECT AddRasterConstraints(current_schema(), 'test_raster_columns', 'rast'::name);
 SELECT AddRasterConstraints(current_schema(), 'test_raster_columns', 'rast'::name, 'regular_blocking');
-SELECT '#1', r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values, ST_AsEWKT(extent) FROM raster_columns WHERE r_table_name = 'test_raster_columns';
+-- SELECT '#1', r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values, ST_AsEWKT(extent) FROM raster_columns WHERE r_table_name = 'test_raster_columns';
+
+--The textual result of ST_Union() relys on the sort of inputs, so we try to verifty it in semantic domain
+SELECT r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values,
+	CASE WHEN ST_Equals(extent,'POLYGON((3 0,0 0,0 3,0 6,3 6,6 6,6 3,6 0,3 0))'::geometry)
+		THEN 'POLYGON((3 0,0 0,0 3,0 6,3 6,6 6,6 3,6 0,3 0))'
+		ELSE ST_AsEWKT(extent)
+	END
+FROM raster_columns WHERE r_table_name = 'test_raster_columns';
 
 -- spatially unique, this should fail
 SELECT make_test_raster(0, 3, 3, 0, 0);
@@ -113,7 +122,14 @@ SELECT make_test_raster(0, 3, 3, 0, 0);
 SELECT make_test_raster(0, 3, 3, 1, 0);
 
 SELECT DropRasterConstraints(current_schema(), 'test_raster_columns', 'rast'::name, 'regular_blocking');
-SELECT '#2', r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values, ST_AsEWKT(extent) FROM raster_columns WHERE r_table_name = 'test_raster_columns';
+-- SELECT '#2', r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values, ST_AsEWKT(extent) FROM raster_columns WHERE r_table_name = 'test_raster_columns';
+
+SELECT r_table_name, r_raster_column, srid, scale_x, scale_y, blocksize_x, blocksize_y, same_alignment, regular_blocking, num_bands, pixel_types, nodata_values,
+	CASE WHEN ST_Equals(extent,'POLYGON((3 0,0 0,0 3,0 6,3 6,6 6,6 3,6 0,3 0))'::geometry)
+		THEN 'POLYGON((3 0,0 0,0 3,0 6,3 6,6 6,6 3,6 0,3 0))'
+		ELSE ST_AsEWKT(extent)
+	END
+FROM raster_columns WHERE r_table_name = 'test_raster_columns';
 
 -- check spatial_index
 SELECT
