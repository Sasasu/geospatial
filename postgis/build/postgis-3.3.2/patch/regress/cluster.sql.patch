diff --git a/regress/cluster.sql b/regress/cluster.sql
index 006d59598..bcd0c0ee2 100644
--- a/regress/cluster.sql
+++ b/regress/cluster.sql
@@ -1,6 +1,6 @@
 -- tests for ST_ClusterIntersecting and ST_ClusterWithin
 
-CREATE TEMPORARY TABLE cluster_inputs (id int, geom geometry);
+CREATE TEMPORARY TABLE cluster_inputs (id int, geom geometry) DISTRIBUTED BY (id);
 INSERT INTO cluster_inputs VALUES
 (1, 'LINESTRING (0 0, 1 1)'),
 (2, 'LINESTRING (5 5, 4 4)'),
@@ -17,7 +17,7 @@ SELECT 't4', ST_AsText(unnest(ST_ClusterWithin(ST_Accum(geom ORDER BY id), 1.5))
 
 -- tests for ST_DBSCAN
 
-CREATE TEMPORARY TABLE dbscan_inputs (id int, geom geometry);
+CREATE TEMPORARY TABLE dbscan_inputs (id int, geom geometry) DISTRIBUTED BY (id);
 INSERT INTO dbscan_inputs VALUES
 (1, 'POINT (0 0)'),
 (2, 'POINT (0 1)'),
@@ -27,13 +27,13 @@ INSERT INTO dbscan_inputs VALUES
 (6, 'POINT (1.0 0.5)');
 
 /* minpoints = 1, equivalent to ST_ClusterWithin */
-SELECT 't101', id, ST_ClusterDBSCAN(geom, eps := 0.8, minpoints := 1) OVER () from dbscan_inputs;
+SELECT 't101', id, ST_ClusterDBSCAN(geom, eps := 0.8, minpoints := 1) OVER (ORDER BY id) from dbscan_inputs ORDER BY id;
 
 /* minpoints = 4, no clusters */
-SELECT 't102', id, ST_ClusterDBSCAN(geom, eps := 0.8, minpoints := 4) OVER () from dbscan_inputs;
+SELECT 't102', id, ST_ClusterDBSCAN(geom, eps := 0.8, minpoints := 4) OVER () from dbscan_inputs ORDER BY id;
 
 /* minpoints = 3, but eps too small to form cluster on left */
-SELECT 't103', id, ST_ClusterDBSCAN(geom, eps := 0.6, minpoints := 3) OVER () from dbscan_inputs;
+SELECT 't103', id, ST_ClusterDBSCAN(geom, eps := 0.6, minpoints := 3) OVER () from dbscan_inputs ORDER BY id;
 
 -- #3612
 SELECT '#3612a', ST_ClusterDBSCAN(foo1.the_geom, 20.1, 5)OVER()  As result
@@ -44,10 +44,16 @@ SELECT '#3612b', ST_ClusterDBSCAN(ST_Point(1,1), 20.1, 5) OVER();
 
 
 -- ST_ClusterKMeans
-select '#4100a', count(distinct result) from (SELECT ST_ClusterKMeans(foo1.the_geom, 3)OVER()  As result
-  FROM ((SELECT ST_Collect(geom)  As the_geom
-		FROM (VALUES ( ST_GeomFromEWKT('SRID=4326;MULTIPOLYGON(((-71.0821 42.3036 2,-71.0822 42.3036 2,-71.082 42.3038 2,-71.0819 42.3037 2,-71.0821 42.3036 2)))') ),
-	( ST_GeomFromEWKT('SRID=4326;POLYGON((-71.1261 42.2703 1,-71.1257 42.2703 1,-71.1257 42.2701 1,-71.126 42.2701 1,-71.1261 42.2702 1,-71.1261 42.2703 1))') ) ) As g(geom) CROSS JOIN generate_series(1,3) As i GROUP BY i )) As foo1 LIMIT 10) kmeans;
+select '#4100a', count(distinct result) from
+(SELECT ST_ClusterKMeans(foo1.the_geom, 3)OVER()  As result
+  FROM
+    (SELECT ST_Collect(geom order by g,i)  As the_geom
+    FROM
+      ( select *, st_astext(geom) as g FROM
+        (VALUES ( ST_GeomFromEWKT('SRID=4326;MULTIPOLYGON(((-71.0821 42.3036 2,-71.0822 42.3036 2,-71.082 42.3038 2,-71.0819 42.3037 2,-71.0821 42.3036 2)))') ),
+                ( ST_GeomFromEWKT('SRID=4326;POLYGON((-71.1261 42.2703 1,-71.1257 42.2703 1,-71.1257 42.2701 1,-71.126 42.2701 1,-71.1261 42.2702 1,-71.1261 42.2703 1))') )
+        ) As g(geom) CROSS JOIN generate_series(1,3) As i
+      )  subq1 GROUP BY i LIMIT 10) foo1)subq2;
 
 select '#4100b', count(distinct cid) from (select ST_ClusterKMeans(geom,2) over () as cid from (values ('POINT(0 0)'::geometry), ('POINT(0 0)')) g(geom)) kmeans;
 
